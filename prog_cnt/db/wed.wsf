/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

VECTOR("D:/git/VHDL_TP2/prog_cnt/prog_cnt.vwf")
{
	ZOOM{
		ZBEGIN = 335264;
		ZEND = 378912;
		NUMERATOR = 580;
		DENOMINATOR = 43648;
		TOP_INDEX = 0;
	}
	CLOCK{
		PERIOD = 10000;
		OFFSET = 0;
		DUTY_CYCLE = 50;
	}
	RANDOM_VALUE{
		INTERVAL_TYPE = HALF_GRID;
	}
	LINE{
		SIGNAL = "clk";
		INDEX = 0;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in";
		INDEX = 1;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[10]";
		INDEX = 2;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[9]";
		INDEX = 3;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[8]";
		INDEX = 4;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[7]";
		INDEX = 5;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[6]";
		INDEX = 6;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[5]";
		INDEX = 7;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[4]";
		INDEX = 8;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[3]";
		INDEX = 9;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[2]";
		INDEX = 10;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[1]";
		INDEX = 11;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "data_in[0]";
		INDEX = 12;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "load";
		INDEX = 13;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "nrst";
		INDEX = 14;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q";
		INDEX = 15;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[10]";
		INDEX = 16;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[9]";
		INDEX = 17;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[8]";
		INDEX = 18;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[7]";
		INDEX = 19;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[6]";
		INDEX = 20;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[5]";
		INDEX = 21;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[4]";
		INDEX = 22;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[3]";
		INDEX = 23;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[2]";
		INDEX = 24;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[1]";
		INDEX = 25;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "q[0]";
		INDEX = 26;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
}

VECTOR("C:/Users/User/Downloads/VHDL_TP2-main/prog_cnt/db/prog_cnt.sim.cvwf")
{
	ZOOM{
		ZBEGIN = 0;
		ZEND = 31248;
		NUMERATOR = 693;
		DENOMINATOR = 31248;
		TOP_INDEX = 37;
	}
	CLOCK{
		PERIOD = 10000;
		OFFSET = 0;
		DUTY_CYCLE = 50;
	}
	RANDOM_VALUE{
		INTERVAL_TYPE = HALF_GRID;
	}
	LINE{
		SIGNAL = "clk_in";
		INDEX = 0;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack";
		INDEX = 1;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[10]";
		INDEX = 2;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[9]";
		INDEX = 3;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[8]";
		INDEX = 4;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[7]";
		INDEX = 5;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[6]";
		INDEX = 6;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[5]";
		INDEX = 7;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[4]";
		INDEX = 8;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[3]";
		INDEX = 9;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[2]";
		INDEX = 10;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[1]";
		INDEX = 11;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[0]";
		INDEX = 12;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in";
		INDEX = 13;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[10]";
		INDEX = 14;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[9]";
		INDEX = 15;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[8]";
		INDEX = 16;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[7]";
		INDEX = 17;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[6]";
		INDEX = 18;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[5]";
		INDEX = 19;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[4]";
		INDEX = 20;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[3]";
		INDEX = 21;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[2]";
		INDEX = 22;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[1]";
		INDEX = 23;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[0]";
		INDEX = 24;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out";
		INDEX = 25;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[10]";
		INDEX = 26;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[9]";
		INDEX = 27;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[8]";
		INDEX = 28;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[7]";
		INDEX = 29;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[6]";
		INDEX = 30;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[5]";
		INDEX = 31;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[4]";
		INDEX = 32;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[3]";
		INDEX = 33;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[2]";
		INDEX = 34;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[1]";
		INDEX = 35;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[0]";
		INDEX = 36;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "nrst";
		INDEX = 37;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl";
		INDEX = 38;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl[1]";
		INDEX = 39;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl[0]";
		INDEX = 40;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out";
		INDEX = 41;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[10]";
		INDEX = 42;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[9]";
		INDEX = 43;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[8]";
		INDEX = 44;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[7]";
		INDEX = 45;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[6]";
		INDEX = 46;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[5]";
		INDEX = 47;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[4]";
		INDEX = 48;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[3]";
		INDEX = 49;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[2]";
		INDEX = 50;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[1]";
		INDEX = 51;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[0]";
		INDEX = 52;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
}

VECTOR("C:/Users/User/Downloads/VHDL_TP2-main/prog_cnt/prog_cnt.vwf")
{
	ZOOM{
		ZBEGIN = 0;
		ZEND = 37550;
		NUMERATOR = 20;
		DENOMINATOR = 1000;
		TOP_INDEX = 0;
	}
	CLOCK{
		PERIOD = 10000;
		OFFSET = 0;
		DUTY_CYCLE = 50;
	}
	RANDOM_VALUE{
		INTERVAL_TYPE = HALF_GRID;
	}
	LINE{
		SIGNAL = "clk_in";
		INDEX = 0;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack";
		INDEX = 1;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[10]";
		INDEX = 2;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[9]";
		INDEX = 3;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[8]";
		INDEX = 4;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[7]";
		INDEX = 5;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[6]";
		INDEX = 6;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[5]";
		INDEX = 7;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[4]";
		INDEX = 8;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[3]";
		INDEX = 9;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[2]";
		INDEX = 10;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[1]";
		INDEX = 11;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "from_stack[0]";
		INDEX = 12;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in";
		INDEX = 13;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[10]";
		INDEX = 14;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[9]";
		INDEX = 15;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[8]";
		INDEX = 16;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[7]";
		INDEX = 17;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[6]";
		INDEX = 18;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[5]";
		INDEX = 19;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[4]";
		INDEX = 20;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[3]";
		INDEX = 21;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[2]";
		INDEX = 22;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[1]";
		INDEX = 23;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "new_pc_in[0]";
		INDEX = 24;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out";
		INDEX = 25;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[10]";
		INDEX = 26;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[9]";
		INDEX = 27;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[8]";
		INDEX = 28;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[7]";
		INDEX = 29;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[6]";
		INDEX = 30;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[5]";
		INDEX = 31;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[4]";
		INDEX = 32;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[3]";
		INDEX = 33;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[2]";
		INDEX = 34;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[1]";
		INDEX = 35;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "next_pc_out[0]";
		INDEX = 36;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "nrst";
		INDEX = 37;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl";
		INDEX = 38;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl[1]";
		INDEX = 39;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_ctrl[0]";
		INDEX = 40;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out";
		INDEX = 41;
		FORMAT = T;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[10]";
		INDEX = 42;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[9]";
		INDEX = 43;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[8]";
		INDEX = 44;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[7]";
		INDEX = 45;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[6]";
		INDEX = 46;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[5]";
		INDEX = 47;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[4]";
		INDEX = 48;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[3]";
		INDEX = 49;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[2]";
		INDEX = 50;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[1]";
		INDEX = 51;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
	LINE{
		SIGNAL = "pc_out[0]";
		INDEX = 52;
		FORMAT = E;
		SCALE = 1;
		VISIBLE = Y;
		FLAG = N;
	}
}
